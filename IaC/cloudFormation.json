{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Term Assignment Cloud (B00969786)",
  "Resources": {
    "AuthorizerLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "authorizer",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "authorizer.py.zip"
        },
        "Timeout": 120
      }
    },
    "AuthorizerApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "AuthorizerApi"
      }
    },
    "AuthorizerApiGatewayResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "LoginApiGateway"
        },
        "ParentId": {
          "Fn::GetAtt": ["LoginApiGateway", "RootResourceId"]
        },
        "PathPart": "login"
      }
    },
    "AuthorizerApiGatewayMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "LoginApiGatewayResource"
        },
        "RestApiId": {
          "Ref": "LoginApiGateway"
        },
        "ApiKeyRequired": false,
        "Integration": {
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseTemplates": {
                "application/json": ""
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ],
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LoginLambda.Arn}/invocations"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": false,
              "method.response.header.Access-Control-Allow-Methods": false,
              "method.response.header.Access-Control-Allow-Origin": false
            }
          }
        ]
      }
    },
    "AuthorizerApiGatewayDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["LoginApiGatewayMethod"],
      "Properties": {
        "RestApiId": {
          "Ref": "LoginApiGateway"
        }
      }
    },
    "AuthorizerApiGatewayStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": "LoginApiGatewayDeployment",
      "Properties": {
        "RestApiId": {
          "Ref": "LoginApiGateway"
        },
        "DeploymentId": {
          "Ref": "LoginApiGatewayDeployment"
        },
        "StageName": "prod"
      }
    },
    "AuthorizerLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LoginApiGateway}/*/POST/login"
        }
      }
    },

    "CodeVerifyLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "code_verify",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "code_verify.py.zip"
        },
        "Timeout": 120
      }
    },
    "CreateRoomLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "create_room",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "create_room.py.zip"
        },
        "Timeout": 120
      }
    },
    "DeleteRoomLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "delete_room",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "delete_room.py.zip"
        },
        "Timeout": 120
      }
    },
    "EditRoomLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "edit_room",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "edit_room.py.zip"
        },
        "Timeout": 120
      }
    },
    "GetMFAStatusLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "get_mfa_status",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "get_mfa_status.py.zip"
        },
        "Timeout": 120
      }
    },
    "GetRoomDetailsLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "get_room_details",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "get_room_details.py.zip"
        },
        "Timeout": 120
      }
    },
    "LoginCredentialsLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "login_credentials",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "login_credentials.py.zip"
        },
        "Timeout": 120
      }
    },
    "RegisterCredentialsLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "register_credentials",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "register_credentials.py.zip"
        },
        "Timeout": 120
      }
    },
    "ResendCodeLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "resend_code",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "resend_code.py.zip"
        },
        "Timeout": 120
      }
    },
    "SessionLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "session",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "session.py.zip"
        },
        "Timeout": 120
      }
    },
    "SetCaesarCipherLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "setup_caesar_cipher",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "setup_caesar_cipher.py.zip"
        },
        "Timeout": 120
      }
    },
    "SetSecurityQuestionLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "setup_security_question",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "setup_security_question.py.zip"
        },
        "Timeout": 120
      }
    },
    "GetUserRoomsLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "user_get_rooms",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "user_get_rooms.py.zip"
        },
        "Timeout": 120
      }
    },
    "ValidatorLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "validator",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "validator.py.zip"
        },
        "Timeout": 120
      }
    },
    "VerifyCipherLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "verify_cipher",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "verify_cipher.py.zip"
        },
        "Timeout": 120
      }
    },
    "VerifySecurityAnswer": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "verify_security_answer",
        "Runtime": "python3.11",
        "Role": "arn:aws:iam::386955125831:role/LabRole",
        "Handler": "lambda/signup.handler",
        "Code": {
          "S3Bucket": "serverless-trial",
          "S3Key": "verify_security_answer.py.zip"
        },
        "Timeout": 120
      }
    }
  }
}